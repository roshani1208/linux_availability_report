---
- wait_for_connection:
    timeout: 10
  register: ssh_conn
  ignore_errors: yes

- debug: var=ssh_conn

- name: Example from an Ansible Playbook
  ping:
  register: ping_out

- debug:
    var: ping_out
  when: ssh_conn is success

- name: preparing inventory
  set_fact: ip= "{{ inventory_hostname }}"
  delegate_to: localhost
  become: false
  when: ssh_conn is not success

- name: get start date
  shell: |
          TODAY=$(date '+%F')
          date -d "$TODAY" '+%Y-%m-01'
          date -d "-$(date +%d) days  month" +%Y-%m-%d
  register: tstamp
  delegate_to: localhost
- debug: var=tstamp

- name: getting hostname details
  shell: hostname
  register: server_hostname
  ignore_errors: yes
  when: ssh_conn is success

- debug: var=server_hostname

- name: fetching uptime of a linux server
  shell: uptime
  register: status_check
  when: ssh_conn is success

- set_fact:
    upTime: "{{ (status_check.stdout).split(',')[0] }}"

- debug: var=upTime

- name: fetching downtime
  shell: last -x shutdown
  register: down_out
  when: ssh_conn is success

- debug: var=down_out


- name: Write down_time to file
  local_action: copy content="{{down_out.stdout}}" dest=/root/server_availability_report/reports/linux/serverdowntime_{{server_hostname.stdout}}.txt
  when: ssh_conn is success
  delegate_to: localhost

- name: execute python for average downtime
  shell: python3 /root/server_availability_report/scripts/averageDownTime.py {{server_hostname.stdout}} linux {{tstamp.stdout_lines[0]}} {{tstamp.stdout_lines[1]}}
  register: avg_out
  when: ssh_conn is success
  delegate_to: localhost

- debug: var=avg_out.stdout
